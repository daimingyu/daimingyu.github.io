<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[作家笔记]]></title>
    <url>%2FLiterature%2Fliterature-a-writer-notebook%2F</url>
    <content type="text"><![CDATA[一、前言 比起英国同行来，法国作家们之所以更容易相互敌对、记恨，还有一个另外的原因:他们的读者太少了，供养不起这么多的作家。我们(英国)有两亿读者，而他们只有四千万。每一个英国作家都有足够的发展空间，你可能从未听说过他，但只要他在任何一个方面有所特长，他的收入就不会太糟。他不会太富有；可话说回来，如果他的目标是大富大贵，他也就不会选择当一个作家。假以时日他便能赢得自己的一批忠实读者，而报纸为了吸引出版商来登广告，不得不留下大幅版面给评论文章，于是大众报刊就给了他足够的关注。他既然自己衣食无忧，也就可以不带妒意的看待其他作家。 但是在法国，很少有作家能靠写小说陌生，除非他们有私人收入或是其他职业来满足自己的生活之需，否则他们不得不靠从事新闻工作来赚钱。买书的人太少，不是每个作家都能摊上，于是一个作家大获成功另一个就要遭殃。扬名立万是一场搏斗，保住读者的尊重和喜欢也是一场搏斗。于是，作家们拼了命的要获得评论家的好评，得知哪张那张报纸上将要刊登一篇短评，就连已经功成名就的作家，不知自己的努力有没有奏效，也会坐立不安；发现那文章诗篇恶评，也会暴跳如雷。在法国，文学评论的确比在英国有分量的多。尽管世界上凡有文化的人都懂法语，也并非只有巴黎人才读法语著作，但法国作家真正在乎的是巴黎人的看法，巴黎评论家、巴黎作家、巴黎睿智读者的意见。正因为所有的文学抱负集中于这一个区域，这才出现倾轧和妒恨。]]></content>
      <categories>
        <category>Literature</category>
      </categories>
      <tags>
        <tag>读后感</tag>
        <tag>摘录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Animate.css的Javascript动画框架]]></title>
    <url>%2FProject%2Fproject-animate-js%2F</url>
    <content type="text"><![CDATA[一、前言Animate.css项目地址：Daniel Eden - Animate.css项目地址：Dai Mingyu - Animate.js 二、项目功能 自定义动画 贝塞尔曲线 回调函数 动画暂停和开始 按需调用 三、使用(一)引入animate.js文件1&lt;script type=&quot;text/javascript&quot; src=&quot;animate.js&quot;&gt;&lt;/script&gt; (二)一个例子123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;例子&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;animate.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;div&quot;&gt;&lt;/div&gt; &lt;button id=&quot;button&quot;&gt;开始动画&lt;/button&gt; &lt;style&gt; #div&#123; width: 300px; height: 300px; background-color: blue; margin : 100px; opacity: 0; &#125; &lt;/style&gt; &lt;script type=&quot;text/javascript&quot;&gt; var oDiv = document.getElementById(&apos;div&apos;); var oButton = document.getElementById(&apos;button&apos;); oButton.onclick = function()&#123; oDiv.animate(&#123; stringRule : ` from &#123; width:300px; &#125; to &#123; width:400px; &#125; `, durtation : &apos;1s&apos;, count:1, &#125;); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 四、API(一)animate(params)1、作用对象通过以下方法选择出来的所有原生DOM对象 getElementById() getElementsByTagName() getElementsByClassName() getElementsByName() querySelect() querySelectAll() 2、参数12345678910111213params:&#123; durtation : &apos;1s&apos;, easing : &apos;linear&apos;, delay : &apos;0s&apos;, count : 1, direction : &apos;normal&apos;, mode : &apos;both&apos;, callback : null, buildInRule : &apos;&apos;, stringRule : &apos;&apos;, jsonRule : null&#125; 3、durtation参数意义：动画完成一个周期所花费的秒或毫秒是否必传：否参数类型：字符串参数可选值 : 任意数值 + s || 任意数值 + ms默认值 ： 1s 4、easing参数意义：规定动画的速度曲线是否必传：否参数类型：字符串参数可选值 : linear || ease || ease-in || ease-out || ease-in-out || cubic-bezier(n,n,n,n)默认值 ： linear 5、delay参数意义：规定动画何时开始是否必传：否参数类型：字符串参数可选值 : 任意数值 + s || 任意数值 + ms默认值 ： 0s 6、count参数意义：规定动画被播放的次数是否必传：否参数类型：数值参数可选值 : n || infinite默认值 ： 1 7、direction参数意义：规定动画是否在下一周期逆向地播放是否必传：否参数类型：字符串参数可选值 : normal || alternate默认值 ： normal 8、mode参数意义：规定对象动画时间之外的状态。是否必传：否参数类型：字符串参数可选值 : none || forwards || backwards || both默认值 ： both 9、callback参数意义：规定动画结束时的回调函数是否必传：否参数类型：函数参数可选值 : 函数 || null默认值 ： null 10、stringRule参数意义：规定动画使用字符串规则是否必传：如果没有传jsonRule则该参数为必传参数类型：字符串参数可选值 : 自定义默认值 ： 空串 11、jsonRule参数意义：规定动画使用json对象规则是否必传：如果没有传stringRule则该参数为必传参数类型：json对象参数可选值 : 自定义默认值 ： null (二)pause()1、作用对象通过以下方法选择出来的所有原生DOM对象 getElementById() getElementsByTagName() getElementsByClassName() getElementsByName() querySelect() querySelectAll() 2、无参数3、使用举例1oDiv.pause(); (三)start()1、作用对象通过以下方法选择出来的所有原生DOM对象 getElementById() getElementsByTagName() getElementsByClassName() getElementsByName() querySelect() querySelectAll() 2、无参数3、使用举例1oDiv.start(); 五、Animate.css动画规则(一)Attention Seekersbounce(弹跳)1、字符串规则123456789101112131415161718stringRule : ` from, 20%, 53%, 80%, to &#123; -webkit-transform: translate3d(0,0,0); transform: translate3d(0,0,0); &#125; 40%, 43% &#123; -webkit-transform: translate3d(0, -30px, 0); transform: translate3d(0, -30px, 0); &#125; 70% &#123; -webkit-transform: translate3d(0, -15px, 0); transform: translate3d(0, -15px, 0); &#125; 90% &#123; -webkit-transform: translate3d(0,-4px,0); transform: translate3d(0,-4px,0); &#125;` 2、json规则123456789101112131415161718jsonRule : &#123; &quot;from, 20%, 53%, 80%, to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0,0,0)&quot;, &quot;transform&quot; : &quot;translate3d(0,0,0)&quot;, &#125;, &quot;40%, 43%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, -30px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -30px, 0)&quot;, &#125;, &quot;70%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, -15px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -15px, 0)&quot;, &#125;, &quot;90%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0,-4px,0)&quot;, &quot;transform&quot; : &quot;translate3d(0,-4px,0)&quot;, &#125;&#125; flash(闪烁)1、字符串规则12345678stringRule : ` from, 50%, to &#123; opacity: 1; &#125; 25%, 75% &#123; opacity: 0; &#125;` 2、json规则12345678jsonRule : &#123; &quot;from, 50%, to&quot; : &#123; &quot;opacity&quot; : 1, &#125;, &quot;25%, 75%&quot; : &#123; &quot;opacity&quot; : 0, &#125;&#125; pluse(脉冲)1、字符串规则1234567891011121314stringRule : ` from &#123; -webkit-transform: scale3d(1, 1, 1); transform: scale3d(1, 1, 1); &#125; 50% &#123; -webkit-transform: scale3d(1.05, 1.05, 1.05); transform: scale3d(1.05, 1.05, 1.05); &#125; to &#123; -webkit-transform: scale3d(1, 1, 1); transform: scale3d(1, 1, 1); &#125;` 2、json规则1234567891011121314jsonRule : &#123; &quot;from&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &#125;, &quot;50%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1.05, 1.05, 1.05)&quot;, &quot;transform&quot; : &quot;scale3d(1.05, 1.05, 1.05)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1, 1, 1)&quot; &#125;&#125; rubberBand(橡皮筋)1、字符串规则123456789101112131415161718192021222324252627282930stringRule : ` from &#123; -webkit-transform: scale3d(1, 1, 1); transform: scale3d(1, 1, 1); &#125; 30% &#123; -webkit-transform: scale3d(1.25, 0.75, 1); transform: scale3d(1.25, 0.75, 1); &#125; 40% &#123; -webkit-transform: scale3d(0.75, 1.25, 1); transform: scale3d(0.75, 1.25, 1); &#125; 50% &#123; -webkit-transform: scale3d(1.15, 0.85, 1); transform: scale3d(1.15, 0.85, 1); &#125; 65% &#123; -webkit-transform: scale3d(.95, 1.05, 1); transform: scale3d(.95, 1.05, 1); &#125; 75% &#123; -webkit-transform: scale3d(1.05, .95, 1); transform: scale3d(1.05, .95, 1); &#125; to &#123; -webkit-transform: scale3d(1, 1, 1); transform: scale3d(1, 1, 1); &#125;` 2、json规则123456789101112131415161718192021222324252627282930jsonRule : &#123; &quot;from&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1, 1, 1)&quot; &#125;, &quot;30%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1.25, 0.75, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1.25, 0.75, 1)&quot; &#125;, &quot;40%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(0.75, 1.25, 1)&quot;, &quot;transform&quot; : &quot;scale3d(0.75, 1.25, 1)&quot; &#125;, &quot;50%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1.15, 0.85, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1.15, 0.85, 1)&quot; &#125;, &quot;65%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(.95, 1.05, 1)&quot;, &quot;transform&quot; : &quot;scale3d(.95, 1.05, 1)&quot; &#125;, &quot;75%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1.05, .95, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1.05, .95, 1)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1, 1, 1)&quot; &#125;&#125; headShake(摇头)1、字符串规则1234567891011121314151617181920212223242526stringRule : ` 0% &#123; -webkit-transform: translateX(0); transform: translateX(0); &#125; 6.5% &#123; -webkit-transform: translateX(-6px) rotateY(-9deg); transform: translateX(-6px) rotateY(-9deg); &#125; 18.5% &#123; -webkit-transform: translateX(5px) rotateY(7deg); transform: translateX(5px) rotateY(7deg); &#125; 31.5% &#123; -webkit-transform: translateX(-3px) rotateY(-5deg); transform: translateX(-3px) rotateY(-5deg); &#125; 43.5% &#123; -webkit-transform: translateX(2px) rotateY(3deg); transform: translateX(2px) rotateY(3deg); &#125; 50% &#123; -webkit-transform: translateX(0); transform: translateX(0); &#125;` 2、json规则1234567891011121314151617181920212223242526jsonRule : &#123; &quot;0%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translateX(0)&quot;, &quot;transform&quot; : &quot;translateX(0)&quot; &#125;, &quot;6.5%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translateX(-6px) rotateY(-9deg)&quot;, &quot;transform&quot; : &quot;translateX(-6px) rotateY(-9deg)&quot; &#125;, &quot;18.5%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translateX(5px) rotateY(7deg)&quot;, &quot;transform&quot; : &quot;translateX(5px) rotateY(7deg)&quot; &#125;, &quot;31.5%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translateX(-3px) rotateY(-5deg)&quot;, &quot;transform&quot; : &quot;translateX(-3px) rotateY(-5deg)&quot; &#125;, &quot;43.5%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translateX(2px) rotateY(3deg)&quot;, &quot;transform&quot; : &quot;translateX(2px) rotateY(3deg)&quot; &#125;, &quot;50%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translateX(0)&quot;, &quot;transform&quot; : &quot;translateX(0)&quot; &#125;&#125; swing(摇摆)1、字符串规则12345678910111213141516171819202122stringRule : ` 20% &#123; -webkit-transform: rotate3d(0, 0, 1, 15deg); transform: rotate3d(0, 0, 1, 15deg); &#125; 40% &#123; -webkit-transform: rotate3d(0, 0, 1, -10deg); transform: rotate3d(0, 0, 1, -10deg); &#125; 60% &#123; -webkit-transform: rotate3d(0, 0, 1, 5deg); transform: rotate3d(0, 0, 1, 5deg); &#125; 80% &#123; -webkit-transform: rotate3d(0, 0, 1, -5deg); transform: rotate3d(0, 0, 1, -5deg); &#125; to &#123; -webkit-transform: rotate3d(0, 0, 1, 0deg); transform: rotate3d(0, 0, 1, 0deg); &#125;` 2、json规则12345678910111213141516171819202122jsonRule : &#123; &quot;20%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;rotate3d(0, 0, 1, 15deg)&quot;, &quot;transform&quot; : &quot;rotate3d(0, 0, 1, 15deg)&quot; &#125;, &quot;40%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;rotate3d(0, 0, 1, -10deg)&quot;, &quot;transform&quot; : &quot;rotate3d(0, 0, 1, -10deg)&quot; &#125;, &quot;60%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;rotate3d(0, 0, 1, 5deg)&quot;, &quot;transform&quot; : &quot;rotate3d(0, 0, 1, 5deg)&quot; &#125;, &quot;80%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;rotate3d(0, 0, 1, -5deg)&quot;, &quot;transform&quot; : &quot;rotate3d(0, 0, 1, -5deg)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;rotate3d(0, 0, 1, 0deg)&quot;, &quot;transform&quot; : &quot;rotate3d(0, 0, 1, 0deg)&quot; &#125;&#125; 惊讶(tada)1、字符串规则12345678910111213141516171819202122stringRule : ` from &#123; -webkit-transform: scale3d(1, 1, 1); transform: scale3d(1, 1, 1); &#125; 10%, 20% &#123; -webkit-transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg); transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg); &#125; 30%, 50%, 70%, 90% &#123; -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg); transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg); &#125; 40%, 60%, 80% &#123; -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg); transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg); &#125; to &#123; -webkit-transform: scale3d(1, 1, 1); transform: scale3d(1, 1, 1); &#125;` 2、json规则12345678910111213141516171819202122jsonRule : &#123; &quot;from&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1, 1, 1)&quot; &#125;, &quot;10%, 20%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg)&quot;, &quot;transform&quot; : &quot;scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg)&quot; &#125;, &quot;30%, 50%, 70%, 90%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg)&quot;, &quot;transform&quot; : &quot;scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg)&quot; &#125;, &quot;40%, 60%, 80%&quot; :&#123; &quot;-webkit-transform&quot; : &quot;scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg)&quot;, &quot;transform&quot; : &quot;scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1, 1, 1)&quot; &#125;&#125; wobble(颤动)1、字符串规则123456789101112131415161718192021222324252627282930stringRule : ` from &#123; -webkit-transform: none; transform: none; &#125; 15% &#123; -webkit-transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg); transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg); &#125; 30% &#123; -webkit-transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg); transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg); &#125; 45% &#123; -webkit-transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg); transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg); &#125; 60% &#123; -webkit-transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg); transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg); &#125; 75% &#123; -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg); transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg); &#125; to &#123; -webkit-transform: none; transform: none; &#125;` 2、json规则123456789101112131415161718192021222324252627282930jsonRule : &#123; &quot;from&quot; : &#123; &quot;-webkit-transform&quot; : &quot;none&quot;, &quot;transform&quot; : &quot;none&quot; &#125;, &quot;15%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)&quot;, &quot;transform&quot; : &quot;translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)&quot; &#125;, &quot;30%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)&quot;, &quot;transform&quot; : &quot;translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)&quot;, &#125;, &quot;45%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)&quot;, &quot;transform&quot; : &quot;translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)&quot; &#125;, &quot;60%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)&quot;, &quot;transform&quot; : &quot;translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)&quot; &#125;, &quot;75%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)&quot;, &quot;transform&quot; : &quot;translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;none&quot;, &quot;transform&quot; : &quot;none&quot; &#125;&#125; jello(果动)1、字符串规则12345678910111213141516171819202122232425262728293031323334stringRule : ` from, 11.1%, to &#123; -webkit-transform: none; transform: none; &#125; 22.2% &#123; -webkit-transform: skewX(-12.5deg) skewY(-12.5deg); transform: skewX(-12.5deg) skewY(-12.5deg); &#125; 33.3% &#123; -webkit-transform: skewX(6.25deg) skewY(6.25deg); transform: skewX(6.25deg) skewY(6.25deg); &#125; 44.4% &#123; -webkit-transform: skewX(-3.125deg) skewY(-3.125deg); transform: skewX(-3.125deg) skewY(-3.125deg); &#125; 55.5% &#123; -webkit-transform: skewX(1.5625deg) skewY(1.5625deg); transform: skewX(1.5625deg) skewY(1.5625deg); &#125; 66.6% &#123; -webkit-transform: skewX(-0.78125deg) skewY(-0.78125deg); transform: skewX(-0.78125deg) skewY(-0.78125deg); &#125; 77.7% &#123; -webkit-transform: skewX(0.390625deg) skewY(0.390625deg); transform: skewX(0.390625deg) skewY(0.390625deg); &#125; 88.8% &#123; -webkit-transform: skewX(-0.1953125deg) skewY(-0.1953125deg); transform: skewX(-0.1953125deg) skewY(-0.1953125deg); &#125;` 2、json规则12345678910111213141516171819202122232425262728293031323334jsonRule : &#123; &quot;from, 11.1%, to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;none&quot;, &quot;transform&quot; : &quot;none&quot; &#125;, &quot;22.2%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;skewX(-12.5deg) skewY(-12.5deg)&quot;, &quot;transform&quot; : &quot;skewX(-12.5deg) skewY(-12.5deg)&quot; &#125;, &quot;33.3%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;skewX(6.25deg) skewY(6.25deg)&quot;, &quot;transform&quot; : &quot;skewX(6.25deg) skewY(6.25deg)&quot; &#125;, &quot;44.4%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;skewX(-3.125deg) skewY(-3.125deg)&quot;, &quot;transform&quot; : &quot;skewX(-3.125deg) skewY(-3.125deg)&quot; &#125;, &quot;55.5%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;skewX(1.5625deg) skewY(1.5625deg)&quot;, &quot;transform&quot; : &quot;skewX(1.5625deg) skewY(1.5625deg)&quot; &#125;, &quot;66.6%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;skewX(-0.78125deg) skewY(-0.78125deg)&quot;, &quot;transform&quot; : &quot;skewX(-0.78125deg) skewY(-0.78125deg)&quot; &#125;, &quot;77.7%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;skewX(0.390625deg) skewY(0.390625deg)&quot;, &quot;transform&quot; : &quot;skewX(0.390625deg) skewY(0.390625deg)&quot; &#125;, &quot;88.8%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;skewX(-0.1953125deg) skewY(-0.1953125deg)&quot;, &quot;transform&quot; : &quot;skewX(-0.1953125deg) skewY(-0.1953125deg)&quot; &#125;&#125; (二)Bouncing EntrancesbounceIn(弹跳进入)1、字符串规则1234567891011121314151617181920212223242526272829stringRule : ` 0% &#123; opacity: 0; -webkit-transform: scale3d(.3, .3, .3); transform: scale3d(.3, .3, .3); &#125; 20% &#123; -webkit-transform: scale3d(1.1, 1.1, 1.1); transform: scale3d(1.1, 1.1, 1.1); &#125; 40% &#123; -webkit-transform: scale3d(.9, .9, .9); transform: scale3d(.9, .9, .9); &#125; 60% &#123; opacity: 1; -webkit-transform: scale3d(1.03, 1.03, 1.03); transform: scale3d(1.03, 1.03, 1.03); &#125; 80% &#123; -webkit-transform: scale3d(.97, .97, .97); transform: scale3d(.97, .97, .97); &#125; to &#123; opacity: 1; -webkit-transform: scale3d(1, 1, 1); transform: scale3d(1, 1, 1); &#125;` 2、json规则1234567891011121314151617181920212223242526272829jsonRule : &#123; &quot;0%&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;scale3d(.3, .3, .3)&quot;, &quot;transform&quot; : &quot;scale3d(.3, .3, .3)&quot; &#125;, &quot;20%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(1.1, 1.1, 1.1)&quot;, &quot;transform&quot; : &quot;scale3d(1.1, 1.1, 1.1)&quot; &#125;, &quot;40%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(.9, .9, .9)&quot;, &quot;transform&quot; : &quot;scale3d(.9, .9, .9)&quot; &#125;, &quot;60%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;scale3d(1.03, 1.03, 1.03)&quot;, &quot;transform&quot; : &quot;scale3d(1.03, 1.03, 1.03)&quot; &#125;, &quot;80%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(.97, .97, .97)&quot;, &quot;transform&quot; : &quot;scale3d(.97, .97, .97)&quot; &#125;, &quot;to&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;scale3d(1, 1, 1)&quot;, &quot;transform&quot; : &quot;scale3d(1, 1, 1)&quot; &#125;&#125; bounceInUp(向上弹跳进入)1、字符串规则123456789101112131415161718192021222324stringRule : ` from &#123; opacity: 0; -webkit-transform: translate3d(0, 3000px, 0); transform: translate3d(0, 3000px, 0); &#125; 60% &#123; opacity: 1; -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); &#125; 75% &#123; -webkit-transform: translate3d(0, 10px, 0); transform: translate3d(0, 10px, 0); &#125; 90% &#123; -webkit-transform: translate3d(0, -5px, 0); transform: translate3d(0, -5px, 0); &#125; to &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125;` 2、json规则123456789101112131415161718192021222324jsonRule : &#123; &quot;from&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(0, 3000px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 3000px, 0)&quot; &#125;, &quot;60%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;translate3d(0, -20px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -20px, 0)&quot; &#125;, &quot;75%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, 10px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 10px, 0)&quot; &#125;, &quot;90%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, -5px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -5px, 0)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 0, 0)&quot; &#125;&#125; bounceInLeft(从左侧弹跳进入)1、字符串规则123456789101112131415161718192021222324stringRule : ` 0% &#123; opacity: 0; -webkit-transform: translate3d(-3000px, 0, 0); transform: translate3d(-3000px, 0, 0); &#125; 60% &#123; opacity: 1; -webkit-transform: translate3d(25px, 0, 0); transform: translate3d(25px, 0, 0); &#125; 75% &#123; -webkit-transform: translate3d(-10px, 0, 0); transform: translate3d(-10px, 0, 0); &#125; 90% &#123; -webkit-transform: translate3d(5px, 0, 0); transform: translate3d(5px, 0, 0); &#125; to &#123; -webkit-transform: none; transform: none; &#125;` 2、json规则123456789101112131415161718192021222324jsonRule : &#123; &quot;0%&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(-3000px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(-3000px, 0, 0)&quot; &#125;, &quot;60%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;translate3d(25px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(25px, 0, 0)&quot; &#125;, &quot;75%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(-10px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(-10px, 0, 0)&quot; &#125;, &quot;90%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(5px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(5px, 0, 0)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;none&quot;, &quot;transform&quot; : &quot;none&quot; &#125;&#125; bounceInRight(从右侧弹跳进入)1、字符串规则123456789101112131415161718192021222324stringRule : ` from &#123; opacity: 0; -webkit-transform: translate3d(3000px, 0, 0); transform: translate3d(3000px, 0, 0); &#125; 60% &#123; opacity: 1; -webkit-transform: translate3d(-25px, 0, 0); transform: translate3d(-25px, 0, 0); &#125; 75% &#123; -webkit-transform: translate3d(10px, 0, 0); transform: translate3d(10px, 0, 0); &#125; 90% &#123; -webkit-transform: translate3d(-5px, 0, 0); transform: translate3d(-5px, 0, 0); &#125; to &#123; -webkit-transform: none; transform: none; &#125;` 2、json规则123456789101112131415161718192021222324jsonRule : &#123; &quot;from&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(3000px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(3000px, 0, 0)&quot; &#125;, &quot;60%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;translate3d(-25px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(-25px, 0, 0)&quot; &#125;, &quot;75%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(10px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(10px, 0, 0)&quot; &#125;, &quot;90%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(-5px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(-5px, 0, 0)&quot;, &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;none&quot;, &quot;transform&quot; : &quot;none&quot; &#125;&#125; bounceInDown(向下方弹跳进入)1、字符串规则123456789101112131415161718192021222324stringRule : ` 0% &#123; opacity: 0; -webkit-transform: translate3d(0, -3000px, 0); transform: translate3d(0, -3000px, 0); &#125; 60% &#123; opacity: 1; -webkit-transform: translate3d(0, 25px, 0); transform: translate3d(0, 25px, 0); &#125; 75% &#123; -webkit-transform: translate3d(0, -10px, 0); transform: translate3d(0, -10px, 0); &#125; 90% &#123; -webkit-transform: translate3d(0, 5px, 0); transform: translate3d(0, 5px, 0); &#125; to &#123; -webkit-transform: none; transform: none; &#125;` 2、json规则123456789101112131415161718192021222324jsonRule : &#123; &quot;0%&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(0, -3000px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -3000px, 0)&quot; &#125;, &quot;60%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;translate3d(0, 25px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 25px, 0)&quot;, &#125;, &quot;75%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, -10px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -10px, 0)&quot; &#125;, &quot;90%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, 5px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 5px, 0)&quot; &#125;, &quot;to&quot; : &#123; &quot;-webkit-transform&quot; : &quot;none&quot;, &quot;transform&quot; : &quot;non&quot; &#125; &#125; (三)Bouncing ExitsbounceOut(弹跳退出)1、字符串规则12345678910111213141516stringRule : ` 20% &#123; -webkit-transform: scale3d(.9, .9, .9); transform: scale3d(.9, .9, .9); &#125; 50%, 55% &#123; opacity: 1; -webkit-transform: scale3d(1.1, 1.1, 1.1); transform: scale3d(1.1, 1.1, 1.1); &#125; to &#123; opacity: 0; -webkit-transform: scale3d(.3, .3, .3); transform: scale3d(.3, .3, .3); &#125;` 2、json规则12345678910111213141516jsonRule : &#123; &quot;20%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;scale3d(.9, .9, .9)&quot;, &quot;transform&quot; : &quot;scale3d(.9, .9, .9)&quot; &#125;, &quot;50%, 55% &quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;scale3d(1.1, 1.1, 1.1)&quot;, &quot;transform&quot; : &quot;scale3d(1.1, 1.1, 1.1)&quot; &#125;, &quot;to&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;scale3d(.3, .3, .3)&quot;, &quot;transform&quot; : &quot;scale3d(.3, .3, .3)&quot; &#125; &#125; bounceOutDown(向下弹跳退出)1、字符串规则12345678910111213141516stringRule : ` 20% &#123; -webkit-transform: translate3d(0, 10px, 0); transform: translate3d(0, 10px, 0); &#125; 40%, 45% &#123; opacity: 1; -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); &#125; to &#123; opacity: 0; -webkit-transform: translate3d(0, 2000px, 0); transform: translate3d(0, 2000px, 0); &#125;` 2、json规则12345678910111213141516jsonRule : &#123; &quot;20%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, 10px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 10px, 0)&quot; &#125;, &quot;40%, 45%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;translate3d(0, -20px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -20px, 0)&quot; &#125;, &quot;to&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(0, 2000px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 2000px, 0)&quot; &#125; &#125; bounceOutLeft(向左弹跳退出)1、字符串规则123456789101112stringRule : ` 20% &#123; opacity: 1; -webkit-transform: translate3d(20px, 0, 0); transform: translate3d(20px, 0, 0); &#125; to &#123; opacity: 0; -webkit-transform: translate3d(-2000px, 0, 0); transform: translate3d(-2000px, 0, 0); &#125;` 2、json规则123456789101112jsonRule : &#123; &quot;20%&quot; : &#123; &quot;opacity&quot;: 1, &quot;-webkit-transform&quot; : &quot;translate3d(20px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(20px, 0, 0)&quot; &#125;, &quot;to&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(-2000px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(-2000px, 0, 0)&quot; &#125; &#125; bounceOutRight(向右弹跳退出)1、字符串规则123456789101112stringRule : ` 20% &#123; opacity: 1; -webkit-transform: translate3d(-20px, 0, 0); transform: translate3d(-20px, 0, 0); &#125; to &#123; opacity: 0; -webkit-transform: translate3d(2000px, 0, 0); transform: translate3d(2000px, 0, 0); &#125;` 2、json规则123456789101112jsonRule : &#123; &quot;20%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;translate3d(-20px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(-20px, 0, 0)&quot; &#125;, &quot;to&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(2000px, 0, 0)&quot;, &quot;transform&quot; : &quot;translate3d(2000px, 0, 0)&quot; &#125; &#125; bounceOutUp(向上弹跳退出)1、字符串规则12345678910111213141516stringRule : ` 20% &#123; -webkit-transform: translate3d(0, -10px, 0); transform: translate3d(0, -10px, 0); &#125; 40%, 45% &#123; opacity: 1; -webkit-transform: translate3d(0, 20px, 0); transform: translate3d(0, 20px, 0); &#125; to &#123; opacity: 0; -webkit-transform: translate3d(0, -2000px, 0); transform: translate3d(0, -2000px, 0); &#125;` 2、json规则12345678910111213141516jsonRule : &#123; &quot;20%&quot; : &#123; &quot;-webkit-transform&quot; : &quot;translate3d(0, -10px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -10px, 0)&quot; &#125;, &quot;40%, 45%&quot; : &#123; &quot;opacity&quot; : 1, &quot;-webkit-transform&quot; : &quot;translate3d(0, 20px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, 20px, 0)&quot; &#125;, &quot;to&quot; : &#123; &quot;opacity&quot; : 0, &quot;-webkit-transform&quot; : &quot;translate3d(0, -2000px, 0)&quot;, &quot;transform&quot; : &quot;translate3d(0, -2000px, 0)&quot; &#125;&#125;]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>项目</tag>
        <tag>动画</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Squarespace - Home Page]]></title>
    <url>%2FDesign%2Fdesign-squarespace-web%2F</url>
    <content type="text"><![CDATA[一、前言原网站地址 : Squarespace作品地址： Dai Mingyu - Squarespace Home Page效果预览 ： Squarespace Home Page 二、文件夹 /index.html : 入口文件 /js : js库文件 /css: css库文件 /images : 图片资源 /fonts : 字体资源 /log：存放登陆页文件夹 三、库文件(一)jquery.easing.js1、从CDN引入jquery.easing.js文件1&lt;script type=&apos;text/javascript&apos; src=&apos;https://cdn.bootcss.com/jquery-easing/1.4.1/jquery.easing.min.js&apos;&gt;&lt;/scrip&gt; 2、启用插件1$(&apos;.aa&apos;).animate(&#123;&apos;width&apos;:&apos;600&apos;&#125; , 1000 , &apos;easeInOutCirc&apos;); 3、可以使用的参数参考链接： jquery ui api - easings (二)animate.css1、从CDN引入animate.css文件1&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/animate.css@3.5.2/animate.min.css&quot;&gt; 2、给指定的元素添加基础class animated1&lt;div class=&quot;item animated&quot;&gt;&lt;/div&gt; 3、结合jQuery给指定的元素添加动画class12var oDiv = $(&apos;.item&apos;);oDiv.addClass(&apos;bounce&apos;); 4、可以使用的动画参考链接： animate.css 5、动画抽离因为有时候不可能用到全部的动画，所以可以将部分动画抽离出来使用，在这个应用中我抽离出来了四个动画，分别在以下四个文件中： fade_in_down.css fade_in_left.css fade_in_up.css fade_out_right.css]]></content>
      <categories>
        <category>Design</category>
      </categories>
      <tags>
        <tag>Design</tag>
        <tag>登陆</tag>
        <tag>注册</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github - 404 Not Found]]></title>
    <url>%2FDesign%2Fdesign-github-404%2F</url>
    <content type="text"><![CDATA[一、前言参考文章一 : Kong Cheng - 仿github404页面特效参考文章二 : VaJoy Larn - 扒皮GitHub 404的图片层次轴动特效作品地址 ： Dai Mingyu - Design Github 404效果预览 : Github - 404 二、文件夹 /js：一个plaxify.js库文件。 /photos：资源图片 /index.html : 入口文件 三、重要代码plaxify.js是整个页面的核心,它封装了移动功能,函数使用说明如下：123456789window.plaxify(HTMLDomElement, &#123; xRange: Number, yRange: Number, invert: Boolenn&#125;)param HTMLDomElement : dom元素param xRange : x轴移动的最大范围param yRange : y轴移动的最大范围param invert : 是否与鼠标移动方向相反]]></content>
      <categories>
        <category>Design</category>
      </categories>
      <tags>
        <tag>Design</tag>
        <tag>404</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS清除浮动]]></title>
    <url>%2FCSS%2Fcss-clear-float%2F</url>
    <content type="text"><![CDATA[一、浮动带来的问题如果没有给父节点设置高度，在给子div设置float:left后，出现如下BUG： 父节点的margin属性失效 子节点没有将父节点撑开 二、一个例子(一)Html1234&lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;d1&quot;&gt;&lt;/div&gt; &lt;div class=&quot;d2&quot;&gt;&lt;/div&gt;&lt;/div&gt; (二)CSS123456789101112131415161718.box&#123; border: 1px solid black; margin: 50px auto; padding: 50px; color: #fff;&#125;.d1&#123; float: left; background: #FE7197; width: 100px; height: 100px;&#125;.d2&#123; float: left; background: #22abe2; width: 100px; height: 100px;&#125; (三)效果 三、最直接的解决方法(一)Html12345&lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;d1&quot;&gt;&lt;/div&gt; &lt;div class=&quot;d2&quot;&gt;&lt;/div&gt; &lt;div class=&quot;clc&quot;&gt;&lt;/div&gt;&lt;/div&gt; (二)CSS123.clc&#123; clear: both;&#125; 四、最优雅的解决方法(一)Html1234&lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;d1&quot;&gt;&lt;/div&gt; &lt;div class=&quot;d2&quot;&gt;&lt;/div&gt;&lt;/div&gt; (二)CSS12345.box:after&#123; clear: both; content: &apos;&apos;; display: block;&#125; 五、最简单的解决方法(一)Html1234&lt;div class=&quot;box clearfix&quot;&gt; &lt;div class=&quot;d1&quot;&gt;&lt;/div&gt; &lt;div class=&quot;d2&quot;&gt;&lt;/div&gt;&lt;/div&gt; (二)CSS123.clearfix&#123; overflow: hidden;&#125; 六、清除浮动后的效果]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>清除浮动</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript常见问题]]></title>
    <url>%2FJavaScript%2Fjs-issue%2F</url>
    <content type="text"><![CDATA[一、基本数据类型 Number(数值) String(字符串) Boolean(布尔) Null(空值) Undefined(未定义 二、变量命名规则 第一个字符必须是一个字母、下划线或一个美元符号，其他字符可以是字母、下划线、美元符号或数字。 尽量避免使用没有意义的命名 禁止使用JavaScript关键词、保留字全名 三、开发规范(一)普通函数 小驼峰123function hasOwnProperty()&#123; ......&#125; (二)构造函数 大驼峰123function ChinesePeople(name,age)&#123; ......&#125; (三)普通对象 key不用加双引号12345obj = &#123; name : &quot;daiming&quot;, foo : function()&#123; &#125;&#125; (四)json对象 key加双引号12345json = &#123; &quot;name&quot; : &quot;daiming&quot;, &quot;foo&quot; : function()&#123; &#125;&#125; (五)事件 全都小写123xhr.onreadystatechange = function()&#123; ......&#125; (六)属性命名 小驼峰]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>JavaScript面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS常见问题]]></title>
    <url>%2FCSS%2Fcss-issue%2F</url>
    <content type="text"><![CDATA[一、link和@import的区别 link是XHTML标签，除了加载CSS外，还可以定义RSS等其他事务；@import属于CSS范畴，只能加载CSS。 link引用CSS时，在页面载入时同时加载；@import需要页面网页完全载入以后加载。 link是XHTML标签，无兼容问题；@import是在CSS2.1提出的，低版本的浏览器不支持。 ink支持使用Javascript控制DOM去改变样式；而@import不支持。 二、常用CSS选择器 id选择器（ #myid） 类选择器（.myclassname） 标签选择器（div, h1, p） 相邻选择器（h1 + p） 子选择器（ul &gt; li） 后代选择器（li a） 通配符选择器（ * ） 属性选择器（a[rel = “external”]，input[type=”text”]） 伪类选择器（a: hover, li: nth - child,:first-child,:last-child,:hover,:focus,:active） 多个类选择器 三、CSS规则权重 !important ： infinty 内联样式 ： 1000 ID选择器 ： 100 Class 属性选择器 伪类选择器（：hover） : 10 标签 : 1 通配符 : 0 注意 : 优先级相同时采用就近原则 四、CSS画三角形12345width:0;height:0;border-width: 100px;border-style:solid;border-color:red transparent transparent transparent; 五、CSS标签嵌套(一)div和p嵌套p标签里是不能嵌套div的，如果嵌套了，则浏览器会解析成如下代码12345678&lt;!-- 嵌套前 --&gt;&lt;p&gt; &lt;div&gt;&lt;/div&gt;&lt;/p&gt;&lt;!-- 浏览器解析后 --&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt; (二)a标签嵌套a标签里是不能嵌套a的，如果嵌套了，则浏览器会解析成如下代码1234567&lt;!-- 嵌套前 --&gt;&lt;a href=&quot;https://www.cctv.com&quot;&gt; &lt;a href=&quot;https://www.cctv.com&quot;&gt;&lt;/a&gt;&lt;/a&gt;&lt;!-- 浏览器解析后 --&gt;&lt;a href=&quot;https://www.cctv.com&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cctv.com&quot;&gt;&lt;/a&gt; 六、CSS属性继承(一)所有元素都可以继承的属性 元素可见性：visibility 光标属性：cursor (二)内联可以继承的属性 字体系列属性 除text-indent、text-align之外的文本系列属性 (三)块级可以继承的属性 text-indent text-align 七、display:none与visibility:hidden的区别 display : 隐藏对应的元素但不挤占该元素原来的空间。 visibility : 隐藏对应的元素并且挤占该元素原来的空间。 八、height:100% 不起作用(一)问题123456789&lt;html&gt; &lt;body&gt; &lt;div style=&quot;height: 100%&quot;&gt; &lt;p&gt; 想让这个div高度为 100% ,但是不起作用。 &lt;/p&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; (二)原因因为页面并没有缺省的高度值，所以，当你让一个元素的高度设定为百分比高度时，无法根据获取父元素的高度，也就无法计算自己的高度。换句话说，父元素的高度只是一个缺省值：height: auto;当你要求浏览器根据这样一个缺省值来计算百分比高度时，只能得到undefined的结果。也就是一个null值，浏览器不会对这个值有任何的反应。 (三)解决123456789&lt;html style=&quot;height: 100%&quot;&gt; &lt;body style=&quot;height: 100%&quot;&gt; &lt;div style=&quot;height: 100%&quot;&gt; &lt;p&gt; 为他所有的父元素的高度都设置成100%,这个div的高度就变成100%了。 &lt;/p&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 九、inline-block之间有空白(一)问题123456&lt;ul&gt; /* 如果代码写成这样，会导致每个li之间有一个空白间隙 */ &lt;li style = &quot;display : inline-block&quot;&gt;1&lt;/li&gt; &lt;li style = &quot;display : inline-block&quot;&gt;2&lt;/li&gt; &lt;li style = &quot;display : inline-block&quot;&gt;2&lt;/li&gt;&lt;/ul&gt; (二)原因浏览器的默认行为会把inline元素间的空白字符（空格换行tab）渲染成一个空格。也就是我们上面的代码li换行后会产生换行字符，而它会变成一个空格，当然空格就占用一个字符的宽度。 (三)解决 去掉换行，将所有li写在一排。 将ul内的字符尺寸(font-size)直接设为0。 十、单词拼写检查(一)问题如果在 类型为text型的input元素、textarea元素、里输入一些不能构成单词的字母时,下面会有一条红色波浪线,这是因为input默认是打开了拼写检查的原因。 (二)解决12&lt;textarea spellcheck=&quot;false&quot;&gt;absolute testK&lt;/textarea&gt;&lt;input type=&quot;text&quot; spellcheck=&quot;false&quot;/&gt; 十一、transition动画导致文字模糊和抖动(一)解决：添加backface-visibility1234.designer .d_item .slide-image&#123; transition: transform 700ms cubic-bezier(.694,0,.335,1); backface-visibility: hidden;&#125;]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>CSS面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dribbble - Sign Up and Login Animated]]></title>
    <url>%2FDesign%2Fdesign-animate-login%2F</url>
    <content type="text"><![CDATA[一、前言dribbble地址 : Deepak Yadav - Sign Up and Login Animated作品地址：Dai Mingyu - Dribbble Animate Login预览地址 : Dribbble Animate Login 二、文件夹 /font：一个Roboto-Light.ttf字体文件。 /js：一个jquery.js库文件。 /photos：一些icon和背景图片等。 /index.html : 入口文件 三、重要代码1.字体文件引入1234@font-face&#123; font-family:roboto-light; src:url(fonts/Roboto-Light.ttf);&#125; 2.placeholder字体颜色123456789101112::-webkit-input-placeholder &#123; /* WebKit browsers */ color:#dddddd;&#125;:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */ color: red; &#125; ::-moz-placeholder &#123; /* Mozilla Firefox 19+ */ color: red; &#125; :-ms-input-placeholder &#123; /* Internet Explorer 10+ */ color: red; &#125; 注意 : 使用时一定要将这几条规则放在对应input前 3.图片下方有空白如何解决div里面img图片下方有空白的问题？ 霞光一点点击这里查看解决方法 4.width与min-width联合使用这个div块宽度随着网页的大小变化，网页在全屏的时候div宽度也全屏，但是网页缩到无论怎么小的时候，div最小宽度也就720px。1234div&#123; min-width:720px; width:100%&#125;]]></content>
      <categories>
        <category>Design</category>
      </categories>
      <tags>
        <tag>Design</tag>
        <tag>登陆</tag>
        <tag>注册</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS居中解决方案]]></title>
    <url>%2FCSS%2Fcss-center%2F</url>
    <content type="text"><![CDATA[一、水平居中(一)宽度固不固定的块都能使用1.方式一1margin : 0 auto; 2.方式二12display：flex;justify-content : center; 3.方式三123position : absolute;left : 50%;transform : translate(-50%,0); (二)只有宽度固定的块能使用123position : absolute;left : 50%;margin-left : -width/2 px; 二、垂直居中(一)高度固不固定的块都能使用1.方式一12display：flex;align-item : center; 2.方式二123position : absolute;top : 50%;transform : translate(0,-50%); (二)只有高度固定的块能使用123position : absolute;top : 50%;margin-left : -height/2 px;]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>水平居中</tag>
        <tag>垂直居中</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BFC-块级格式化上下文]]></title>
    <url>%2FCSS%2Fcss-bfc%2F</url>
    <content type="text"><![CDATA[一、定义BFC：英文名 block formatting context，中文名块级格式化上下文。 二、布局规则 BFC的区域不会与float的元素区域重叠 计算BFC的高度时，浮动子元素也参与计算 box垂直排列，垂直方向的margin会发生重叠 三、创建BFC float属性不为none overflow不为visible position为absolute或fixed display为inlin-block 最常用overflow : hidden 因为它不会引起布局变化 四、解决问题(一)两栏布局1.创建两栏布局时出现的问题 2.利用原理 BFC的区域不会与float的元素区域重叠 3.CSS12345.right&#123; height: 300px; background: #22AAE3; overflow: hidden; /*这里为右边的盒子创建了BFC*/&#125; 4.效果 (二)清除浮动1.由于子元素浮动造成的高度坍塌问题 2.利用原理 算BFC的高度时，浮动子元素也参与计算 3.Html1234&lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;d1&quot;&gt;&lt;/div&gt; &lt;div class=&quot;d2&quot;&gt;&lt;/div&gt;&lt;/div&gt; 4.CSS123.box&#123; overflow: hidden; /*这里为外层盒子创建了BFC*/&#125; 5.效果 (三)外边距重叠1.外边距重叠的问题 2.利用原理 在同一个BFC内 Box垂直排列，垂直方向的margin会发生重叠，不属于同一个BFC的盒子垂直方向上不会发生重叠 3.HTML123456&lt;div class=&quot;top_wrap&quot;&gt; &lt;div class=&quot;top&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;bottom_wrap&quot;&gt; &lt;div class=&quot;bottom&quot;&gt;&lt;/div&gt;&lt;/div&gt; 4.CSS123456789101112131415161718.top&#123; width: 150px; height: 150px; background: #fc7299; margin-bottom: 50px;&#125;.bottom&#123; height: 150px; width: 150px; background: #22AAE3; margin-top: 50px;&#125;.top_wrap&#123; overflow: hidden; /*为包裹容器创建BFC*/&#125;.bottom_wrap&#123; overflow: hidden; /*为包裹容器创建BFC*/&#125; 5.效果]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>清除浮动</tag>
        <tag>BFC</tag>
        <tag>外边距重叠</tag>
        <tag>两栏布局</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[世界 您好]]></title>
    <url>%2Funcategorized%2Fhello-world%2F</url>
    <content type="text"><![CDATA[]]></content>
      <tags>
        <tag>起步</tag>
      </tags>
  </entry>
</search>
